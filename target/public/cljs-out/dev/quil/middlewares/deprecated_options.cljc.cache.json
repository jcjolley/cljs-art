["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$quil.middlewares.deprecated-options","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$deprecated",["^ ","~:meta",["^ ","~:file","C:\\Users\\jolle\\dev\\art\\perlin\\target\\public\\cljs-out\\dev\\quil\\middlewares\\deprecated_options.cljc","~:line",3,"~:column",16,"~:end-line",3,"~:end-column",26,"~:private",true],"^C",true,"^5","~$quil.middlewares.deprecated-options/deprecated","^>","target\\public\\cljs-out\\dev\\quil\\middlewares\\deprecated_options.cljc","^B",26,"^@",1,"^?",3,"^A",3,"~:tag","~$cljs.core/IMap"],"~$check-features-vector",["^ ","~:protocol-inline",null,"^=",["^ ","^>","C:\\Users\\jolle\\dev\\art\\perlin\\target\\public\\cljs-out\\dev\\quil\\middlewares\\deprecated_options.cljc","^?",8,"^@",8,"^A",8,"^B",29,"^C",true,"~:arglists",["~#list",["~$quote",["^J",[["~$features"]]]]]],"^C",true,"^5","~$quil.middlewares.deprecated-options/check-features-vector","~:variadic",false,"^>","target\\public\\cljs-out\\dev\\quil\\middlewares\\deprecated_options.cljc","^B",29,"~:method-params",["^J",[["^L"]]],"~:protocol-impl",null,"~:arglists-meta",["^J",[null,null]],"^@",1,"^?",8,"^A",8,"~:max-fixed-arity",1,"~:fn-var",true,"^I",["^J",["^K",["^J",[["^L"]]]]]],"~$deprecated-options",["^ ","^H",null,"^=",["^ ","^>","C:\\Users\\jolle\\dev\\art\\perlin\\target\\public\\cljs-out\\dev\\quil\\middlewares\\deprecated_options.cljc","^?",15,"^@",7,"^A",15,"^B",25,"^I",["^J",["^K",["^J",[["~$options"]]]]],"~:doc","Checks if options map contains deprected options and removes them.\n  Prints messages how to fix deprecated functions."],"^5","~$quil.middlewares.deprecated-options/deprecated-options","^N",false,"^>","target\\public\\cljs-out\\dev\\quil\\middlewares\\deprecated_options.cljc","^B",25,"^O",["^J",[["^U"]]],"^P",null,"^Q",["^J",[null,null]],"^@",1,"^?",15,"^A",15,"^R",1,"^S",true,"^I",["^J",["^K",["^J",[["^U"]]]]],"^V","Checks if options map contains deprected options and removes them.\n  Prints messages how to fix deprecated functions."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:features","~:decor","~:safe-draw-fn","~:no-safe-draw","~:target"]],"~:order",["^11","^14","^12","^13","^10"]],"^V",null]